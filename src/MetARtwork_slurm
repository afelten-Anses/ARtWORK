#!/usr/bin/python
# -*- coding: iso-8859-1 -*-
#librairies n√©cessaire au script
import os, sys
import argparse

def get_parser():


    parser = argparse.ArgumentParser(description='MetARTwork for slurm')

    parser.add_argument('-i', action="store", dest='TSV', 
                     type=str, required=True, help="ARTwork TSV file (REQUIRED)")
    
    parser.add_argument('-n', action="store", dest='NASBIO1_PATH', 
                        type=str, default='/global/bio/', help='NASBIO1 path (default:/global/bio/)')

    parser.add_argument('-T', action="store", dest='nbThreads', 
                        type=str, default='48', help='Number of threads to use (default:40)')
    
    parser.add_argument('--alerte', dest='alerte', action='store_true', 
                        help='Use Alerte_rouge partition', default=False)

    return parser


#main function	
def main():
    
    parser=get_parser()
    dependencies=[]
    #print parser.help if no arguments
    if len(sys.argv)==1:
        parser.print_help()
        sys.exit(1)

    Arguments=parser.parse_args()
    
    if Arguments.alerte:
        script = " ARtWORK_slurm_alerte "
    else:
        #script = " /global/conda/bin/ARtWORK_slurm "
	script = " ARtWORK_slurm "

    tab_file = Arguments.TSV
    tab=open(tab_file, 'r')
    lines=tab.readlines()
    header=True
    for line in lines :
        if header:
            header=False
            continue
        else :
            line = line.rstrip()
            line = line.split('\t')
            id = line[2]
            cmd = "sbatch --parsable --cpus-per-task=" + Arguments.nbThreads + " -J \"ARtWORK_" + id + "\"" + script + \
            Arguments.NASBIO1_PATH + " " + Arguments.nbThreads + " " + line[0] + " " + line[1] + " \"" + line[2] + "\" " + line[3] + " " + \
            line[4] + " " + line[5] + " " + line[6] + " " + line[7] + " " + line[8]
            print(cmd)

            #os.system(cmd)
            slurm_id = str(subprocess.check_output("".join(cmd), shell=True))
            dependencies.append(slurm_id)

    cmd = "sbatch --parsable " + str(" --dependency=afterok:")+ ":".join(dependencies) + " AFTERwork.sh" # add here the command for ConFinder, etc.
    #cmd = "sbatch --parsable --cpus-per-task=" + Arguments.nbThreads + " "+ str(" --dependency=afterok:")+ ":".join(dependencies) + " AFTERwork.sh" # add here the command for ConFinder, etc.
    os.system(cmd)
if __name__ == "__main__":
	main()					
                
